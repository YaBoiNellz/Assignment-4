{"ast":null,"code":"var _jsxFileName = \"/Users/nellz/Desktop/Assignment-4/src/App.js\";\n\n/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'; // Import other components\n\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    // Create and initialize state\n    super();\n\n    this.mockLogIn = logInInfo => {\n      const newUser = { ...this.state.currentUser\n      };\n      newUser.userName = logInInfo.userName;\n      this.setState({\n        currentUser: newUser\n      });\n    };\n\n    this.addCredit = credit => {\n      const newCreditList = this.state.creditList; // get the current array of credits\n\n      newCreditList.push(credit); // add the new credit to the credits array\n\n      this.setState({\n        creditList: newCreditList\n      }); // update the credits state\n\n      this.updateAccountBalance(); // update the account balance state\n    };\n\n    this.addDebit = debit => {\n      const newDebitList = this.state.debitList; // get the current array of debits\n\n      newDebitList.push(debit); // add the new debit to the debits array\n\n      this.setState({\n        debitList: newDebitList\n      }); // update the debits state\n\n      this.updateAccountBalance(); // update the account balance state \n    };\n\n    this.updateAccountBalance = () => {\n      let newBalance = 0; // loop through the credits\n\n      this.state.creditList.forEach(credit => {\n        newBalance += credit.amount;\n      }); // loop through the credits\n\n      this.state.debitList.forEach(debit => {\n        newBalance -= debit.amount;\n      }); // update the accountBalance\n\n      this.setState({\n        accountBalance: newBalance\n      });\n    };\n\n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99'\n      }\n    };\n  } // Update state's currentUser (userName) after \"Log In\" button is clicked\n\n\n  // load credits and debits from API\n  async componentDidMount() {\n    let linkToCredits = \"https://johnnylaicode.github.io/api/credits.json\";\n    let linkToDebits = \"https://johnnylaicode.github.io/api/debits.json\"; // Await for promise (completion) returned from API call\n\n    try {\n      // Accept success response as array of JSON objects (users)\n      let response = await axios.get(linkToCredits); // update the account balance\n\n      this.updateAccountBalance(); // get JSON data from response\n\n      this.setState({\n        creditList: response.data\n      }); // Store the data in the credits state\n    } catch (error) {\n      // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // Print out error message (e.g., Not Found)\n\n        console.log(error.response.status); // Print out error status code (e.g., 404)\n      }\n    } // Await for promise (completion) returned from API call\n\n\n    try {\n      // Accept success response as array of JSON objects (users)\n      let response = await axios.get(linkToDebits); // update the account balance\n\n      this.updateAccountBalance(); // get JSON data from response\n\n      this.setState({\n        debitList: response.data\n      }); // Store the data in the debits state\n    } catch (error) {\n      // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data); // Print out error message (e.g., Not Found)\n\n        console.log(error.response.status); // Print out error status code (e.g., 404)\n      }\n    }\n  } // Create Routes and React elements to be rendered using React components\n\n\n  render() {\n    // Create React elements and pass input props to components\n    const HomeComponent = () => /*#__PURE__*/_jsxDEV(Home, {\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 34\n    }, this);\n\n    const UserProfileComponent = () => /*#__PURE__*/_jsxDEV(UserProfile, {\n      userName: this.state.currentUser.userName,\n      memberSince: this.state.currentUser.memberSince\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this);\n\n    const LogInComponent = () => /*#__PURE__*/_jsxDEV(LogIn, {\n      user: this.state.currentUser,\n      mockLogIn: this.mockLogIn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 35\n    }, this);\n\n    const CreditsComponent = () => /*#__PURE__*/_jsxDEV(Credits, {\n      credits: this.state.creditList,\n      addCredit: this.addCredit,\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }, this);\n\n    const DebitsComponent = () => /*#__PURE__*/_jsxDEV(Debits, {\n      debits: this.state.debitList,\n      addDebit: this.addDebit,\n      accountBalance: this.state.accountBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 36\n    }, this); // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n\n\n    return /*#__PURE__*/_jsxDEV(Router, {\n      basename: \"/my-react-app\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          render: HomeComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userProfile\",\n          render: UserProfileComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/login\",\n          render: LogInComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/credits\",\n          render: CreditsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/debits\",\n          render: DebitsComponent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/nellz/Desktop/Assignment-4/src/App.js"],"names":["React","Component","BrowserRouter","Router","Route","Home","UserProfile","LogIn","Credits","Debits","axios","App","constructor","mockLogIn","logInInfo","newUser","state","currentUser","userName","setState","addCredit","credit","newCreditList","creditList","push","updateAccountBalance","addDebit","debit","newDebitList","debitList","newBalance","forEach","amount","accountBalance","memberSince","componentDidMount","linkToCredits","linkToDebits","response","get","data","error","console","log","status","render","HomeComponent","UserProfileComponent","LogInComponent","CreditsComponent","DebitsComponent"],"mappings":"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","sourcesContent":["/*==================================================\nsrc/App.js\n\nThis is the top-level component of the app.\nIt contains the top-level state.\n==================================================*/\nimport React, {Component} from 'react';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n\n// Import other components\nimport Home from './components/Home';\nimport UserProfile from './components/UserProfile';\nimport LogIn from './components/Login';\nimport Credits from './components/Credits';\nimport Debits from './components/Debits';\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor() {  // Create and initialize state\n    super(); \n    this.state = {\n      accountBalance: 0,\n      creditList: [],\n      debitList: [],\n      currentUser: {\n        userName: 'Joe Smith',\n        memberSince: '11/22/99',\n      }\n    };\n  }\n\n  // Update state's currentUser (userName) after \"Log In\" button is clicked\n  mockLogIn = (logInInfo) => {  \n    const newUser = {...this.state.currentUser};\n    newUser.userName = logInInfo.userName;\n    this.setState({currentUser: newUser})\n  }\n\n  // adds a credit to the users records and updates the account balance\n  addCredit = (credit) => {\n    const newCreditList = this.state.creditList; // get the current array of credits\n    newCreditList.push(credit); // add the new credit to the credits array\n    this.setState({creditList: newCreditList}); // update the credits state\n    \n    this.updateAccountBalance(); // update the account balance state\n    \n  }\n\n  // adds a debit to the users records and updates the account balance\n  addDebit = (debit) => {\n    const newDebitList = this.state.debitList; // get the current array of debits\n    newDebitList.push(debit); // add the new debit to the debits array\n    this.setState({debitList: newDebitList}); // update the debits state\n    \n    this.updateAccountBalance(); // update the account balance state \n  }\n\n  // updates the account balance\n  updateAccountBalance = () => {\n    let newBalance = 0;\n\n    // loop through the credits\n    this.state.creditList.forEach(credit => {\n      newBalance += credit.amount;\n    });\n\n    // loop through the credits\n    this.state.debitList.forEach(debit => {\n      newBalance -= debit.amount;\n    });\n\n    // update the accountBalance\n    this.setState({accountBalance: newBalance});\n  }\n\n  // load credits and debits from API\n  async componentDidMount(){\n    let linkToCredits = \"https://johnnylaicode.github.io/api/credits.json\";\n    let linkToDebits = \"https://johnnylaicode.github.io/api/debits.json\";\n\n    // Await for promise (completion) returned from API call\n    try {  // Accept success response as array of JSON objects (users)\n      let response = await axios.get(linkToCredits);\n\n      // update the account balance\n      this.updateAccountBalance();\n      \n      // get JSON data from response\n      this.setState({creditList: response.data});  // Store the data in the credits state\n    } \n    catch (error) {  // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\n      }    \n    }\n\n    // Await for promise (completion) returned from API call\n    try {  // Accept success response as array of JSON objects (users)\n      let response = await axios.get(linkToDebits);\n\n      // update the account balance\n      this.updateAccountBalance();\n      \n      // get JSON data from response\n      this.setState({debitList: response.data});  // Store the data in the debits state\n    } \n    catch (error) {  // Print out errors at console when there is an error response\n      if (error.response) {\n        // The request was made, and the server responded with error message and status code.\n        console.log(error.response.data);  // Print out error message (e.g., Not Found)\n        console.log(error.response.status);  // Print out error status code (e.g., 404)\n      }    \n    }\n    \n  }\n\n  // Create Routes and React elements to be rendered using React components\n  render() {  \n    // Create React elements and pass input props to components\n    const HomeComponent = () => (<Home accountBalance={this.state.accountBalance} />)\n    const UserProfileComponent = () => (\n      <UserProfile userName={this.state.currentUser.userName} memberSince={this.state.currentUser.memberSince} />\n    )\n    const LogInComponent = () => (<LogIn user={this.state.currentUser} mockLogIn={this.mockLogIn} />)\n    const CreditsComponent = () => (<Credits credits={this.state.creditList} addCredit={this.addCredit} accountBalance={this.state.accountBalance} />) \n    const DebitsComponent = () => (<Debits debits={this.state.debitList} addDebit={this.addDebit} accountBalance={this.state.accountBalance} />) \n\n    // Important: Include the \"basename\" in Router, which is needed for deploying the React app to GitHub Pages\n    return (\n      <Router basename=\"/my-react-app\">\n        <div>\n          <Route exact path=\"/\" render={HomeComponent}/>\n          <Route exact path=\"/userProfile\" render={UserProfileComponent}/>\n          <Route exact path=\"/login\" render={LogInComponent}/>\n          <Route exact path=\"/credits\" render={CreditsComponent}/>\n          <Route exact path=\"/debits\" render={DebitsComponent}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}